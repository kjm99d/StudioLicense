basePath: /
definitions:
  models.APIResponse:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        description: success, error
        type: string
    type: object
  models.ActivateRequest:
    properties:
      device_info:
        $ref: '#/definitions/models.DeviceInfo'
      license_key:
        type: string
    required:
    - device_info
    - license_key
    type: object
  models.Admin:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        description: admin, superadmin
        type: string
      permissions:
        description: 허용된 관리자 권한 키 목록
        items:
          type: string
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.AdminCreateRequest:
    properties:
      email:
        type: string
      password:
        type: string
      permissions:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - username
    - email
    - password
    type: object
  models.AdminPermissionsUpdateRequest:
    properties:
      permissions:
        items:
          type: string
        type: array
    required:
    - permissions
    type: object
  models.AdminPermissionDefinition:
    properties:
      category:
        type: string
      description:
        type: string
      key:
        type: string
      label:
        type: string
    type: object
  models.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.ClientLogEntry:
    properties:
      app_version:
        type: string
      category:
        description: APP, SYSTEM, LICENSE, NETWORK
        type: string
      details:
        type: string
      level:
        description: DEBUG, INFO, WARN, ERROR, FATAL
        type: string
      message:
        type: string
      os_version:
        type: string
      stack_trace:
        type: string
      timestamp:
        description: 클라이언트 시간
        type: string
    type: object
  models.ClientLogRequest:
    properties:
      device_id:
        type: string
      license_key:
        type: string
      logs:
        description: 배치 전송 지원
        items:
          $ref: '#/definitions/models.ClientLogEntry'
        type: array
    type: object
  models.CreateLicenseRequest:
    properties:
      customer_email:
        type: string
      customer_name:
        type: string
      expires_at:
        type: string
      max_devices:
        minimum: 1
        type: integer
      notes:
        type: string
      policy_id:
        description: 정책 ID (선택사항)
        type: string
      product_id:
        description: 제품 ID (선택사항)
        type: string
      product_name:
        type: string
    required:
    - customer_email
    - customer_name
    - expires_at
    - max_devices
    - product_name
    type: object
  models.CreatePolicyRequest:
    properties:
      policy_data:
        description: JSON 형식
        type: string
      policy_name:
        type: string
    required:
    - policy_data
    - policy_name
    type: object
  models.CreateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  models.DeviceInfo:
    properties:
      client_id:
        type: string
      cpu_id:
        type: string
      disk_serial:
        type: string
      hostname:
        type: string
      mac_address:
        type: string
      machine_id:
        type: string
      motherboard_sn:
        type: string
      os:
        type: string
      os_version:
        type: string
    type: object
  models.License:
    properties:
      active_devices:
        description: 활성 디바이스 수
        type: integer
      created_at:
        type: string
      customer_email:
        type: string
      customer_name:
        type: string
      expires_at:
        type: string
      id:
        type: string
      license_key:
        type: string
      max_devices:
        type: integer
      notes:
        type: string
      policy_id:
        type: string
      policy_name:
        type: string
      product_id:
        type: string
      product_name:
        type: string
      status:
        description: active, revoked, expired
        type: string
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      admin:
        $ref: '#/definitions/models.Admin'
      expires_at:
        type: integer
      token:
        type: string
    type: object
  models.PaginatedResponse:
    properties:
      data: {}
      message:
        type: string
      meta:
        $ref: '#/definitions/models.Pagination'
      status:
        type: string
    type: object
  models.Pagination:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  models.Policy:
    properties:
      created_at:
        type: string
      id:
        type: string
      policy_data:
        description: JSON 형식의 정책 데이터
        type: string
      policy_name:
        type: string
      updated_at:
        type: string
    type: object
  models.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        description: active, inactive
        type: string
      updated_at:
        type: string
    type: object
  models.UpdatePolicyRequest:
    properties:
      policy_data:
        type: string
      policy_name:
        type: string
    type: object
  models.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  models.ValidateRequest:
    properties:
      device_info:
        $ref: '#/definitions/models.DeviceInfo'
      license_key:
        type: string
    required:
    - device_info
    - license_key
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: 하드웨어 기반 라이선스 관리 서버
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Studio License Server API
  version: "1.0"
paths:
  /api/admin/change-password:
    post:
      consumes:
      - application/json
      description: 현재 비밀번호를 확인하고 새로운 비밀번호로 변경합니다
      parameters:
      - description: 비밀번호 변경 요청
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 변경 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요/현재 비밀번호 불일치
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 비밀번호 변경
      tags:
      - 인증
  /api/admin/admins:
    get:
      consumes:
      - application/json
      description: 관리자 목록을 조회합니다 (슈퍼 관리자 전용)
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Admin'
                  type: array
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 관리자 목록 조회
      tags:
      - 관리자 - 계정
  /api/admin/admins/create:
    post:
      consumes:
      - application/json
      description: 새로운 서브 관리자를 생성합니다 (슈퍼 관리자 전용)
      parameters:
      - description: 생성 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AdminCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 생성 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 서브 관리자 생성
      tags:
      - 관리자 - 계정
  /api/admin/admins/{admin_id}/permissions:
    put:
      consumes:
      - application/json
      description: 특정 관리자의 권한을 업데이트합니다 (슈퍼 관리자 전용)
      parameters:
      - description: 관리자 ID
        in: path
        name: admin_id
        required: true
        type: string
      - description: 권한 목록
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AdminPermissionsUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 업데이트 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 관리자 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 관리자 권한 업데이트
      tags:
      - 관리자 - 계정
  /api/admin/admins/{admin_id}/reset-password:
    post:
      consumes:
      - application/json
      description: 특정 관리자의 비밀번호를 초기화합니다 (슈퍼 관리자 전용)
      parameters:
      - description: 관리자 ID
        in: path
        name: admin_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 초기화 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  properties:
                    temp_password:
                      type: string
                  type: object
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 관리자 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 관리자 비밀번호 초기화
      tags:
      - 관리자 - 계정
  /api/admin/admins/{admin_id}:
    delete:
      consumes:
      - application/json
      description: 특정 관리자 계정을 삭제합니다 (슈퍼 관리자 전용)
      parameters:
      - description: 관리자 ID
        in: path
        name: admin_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 삭제 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 관리자 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 관리자 삭제
      tags:
      - 관리자 - 계정
  /api/admin/permissions/catalog:
    get:
      consumes:
      - application/json
      description: 부여 가능한 관리자 권한 목록을 조회합니다 (슈퍼 관리자 전용)
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.AdminPermissionDefinition'
                  type: array
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 부족
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 관리자 권한 카탈로그 조회
      tags:
      - 관리자 - 계정
  /api/admin/client-logs:
    get:
      consumes:
      - application/json
      description: 클라이언트가 전송한 로그를 조회합니다
      parameters:
      - description: 라이선스 키
        in: query
        name: license_key
        type: string
      - description: 디바이스 ID
        in: query
        name: device_id
        type: string
      - description: 로그 레벨 (DEBUG, INFO, WARN, ERROR, FATAL)
        in: query
        name: level
        type: string
      - description: 카테고리 (APP, SYSTEM, LICENSE, NETWORK, etc.)
        in: query
        name: category
        type: string
      - description: 시작 날짜 (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: 종료 날짜 (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: '페이지 번호 (기본값: 1)'
        in: query
        name: page
        type: integer
      - description: '페이지 크기 (기본값: 50)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 로그 목록
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "401":
          description: 인증 실패
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 클라이언트 로그 조회
      tags:
      - 관리자 - 로그
  /api/admin/client-logs/cleanup:
    delete:
      consumes:
      - application/json
      description: 특정 기간 이전의 클라이언트 로그를 삭제합니다
      parameters:
      - description: 이전 날짜 (YYYY-MM-DD) - 이 날짜 이전의 로그 삭제
        in: query
        name: before_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 삭제 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 실패
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 권한 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 클라이언트 로그 삭제
      tags:
      - 관리자 - 로그
  /api/admin/devices/cleanup:
    post:
      consumes:
      - application/json
      description: N일 이상 비활성 상태인 디바이스를 삭제합니다 (권한: devices.manage, super_admin)
      parameters:
      - description: 비활성 기간 (일)
        in: body
        name: request
        required: true
        schema:
          properties:
            days:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 정리 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 비활성 디바이스 자동 정리
      tags:
      - 관리자 - 디바이스
  /api/admin/devices/deactivate:
    post:
      consumes:
      - application/json
      description: 관리자가 특정 디바이스를 강제로 비활성화합니다 (권한: devices.manage)
      parameters:
      - description: 디바이스 ID
        in: body
        name: request
        required: true
        schema:
          properties:
            device_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 비활성화 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 디바이스 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 디바이스 비활성화 (관리자)
      tags:
      - 관리자 - 디바이스
  /api/admin/devices/delete:
    post:
      consumes:
      - application/json
      description: 특정 디바이스를 데이터베이스에서 완전히 삭제합니다 (권한: devices.manage)
      parameters:
      - description: 디바이스 ID
        in: body
        name: request
        required: true
        schema:
          properties:
            device_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 삭제 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 디바이스 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 디바이스 개별 삭제
      tags:
      - 관리자 - 디바이스
  /api/admin/devices/logs:
    get:
      consumes:
      - application/json
      description: 특정 디바이스의 활동 로그를 조회합니다 (권한: devices.view)
      parameters:
      - description: 디바이스 ID
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 로그 조회 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 디바이스 활동 로그 조회
      tags:
      - 관리자 - 디바이스
  /api/admin/devices/reactivate:
    post:
      consumes:
      - application/json
      description: 관리자가 비활성화된 디바이스를 다시 활성화합니다 (권한: devices.manage)
      parameters:
      - description: 디바이스 ID
        in: body
        name: request
        required: true
        schema:
          properties:
            device_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 재활성화 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 디바이스 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "409":
          description: 이미 활성 상태 또는 슬롯 초과
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 디바이스 재활성화 (관리자)
      tags:
      - 관리자 - 디바이스
  /api/admin/licenses:
    get:
      consumes:
      - application/json
      description: 라이선스 목록을 페이징하여 조회합니다
      parameters:
      - default: 1
        description: 페이지 번호
        in: query
        name: page
        type: integer
      - default: 20
        description: 페이지 크기
        in: query
        name: page_size
        type: integer
      - description: 상태 필터 (active, expired, revoked)
        in: query
        name: status
        type: string
      - description: 검색어 (라이선스 키, 고객명, 이메일)
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.License'
                  type: array
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 라이선스 목록 조회
      tags:
      - 관리자 - 라이선스
    post:
      consumes:
      - application/json
      description: 새로운 라이선스를 생성합니다
      parameters:
      - description: 라이선스 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateLicenseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 생성 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.License'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 라이선스 생성
      tags:
      - 관리자 - 라이선스
  /api/admin/licenses/:
    get:
      consumes:
      - application/json
      description: 특정 라이선스의 상세 정보를 조회합니다
      parameters:
      - description: 라이선스 ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.License'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 라이선스 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 라이선스 상세 조회
      tags:
      - 관리자 - 라이선스
  /api/admin/login:
    post:
      consumes:
      - application/json
      description: 관리자 계정으로 로그인하여 JWT 토큰을 발급받습니다
      parameters:
      - description: 로그인 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 로그인 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 실패
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: 관리자 로그인
      tags:
      - 인증
  /api/admin/me:
    get:
      consumes:
      - application/json
      description: 로그인된 관리자의 정보를 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Admin'
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 사용자 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 현재 사용자 정보 조회
      tags:
      - 인증
  /api/admin/policies:
    get:
      consumes:
      - application/json
      description: 모든 정책을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 모든 정책 조회
      tags:
      - 관리자 - 정책
    post:
      consumes:
      - application/json
      description: 새로운 정책을 생성합니다
      parameters:
      - description: 정책 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreatePolicyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 생성 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Policy'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "409":
          description: 정책명 중복
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 정책 생성
      tags:
      - 관리자 - 정책
  /api/admin/policies/{policy_id}:
    delete:
      consumes:
      - application/json
      description: 정책을 삭제합니다
      parameters:
      - description: 정책 ID
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 삭제 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 정책 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 정책 삭제
      tags:
      - 관리자 - 정책
    get:
      consumes:
      - application/json
      description: 특정 정책의 상세 정보를 조회합니다
      parameters:
      - description: 정책 ID
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Policy'
              type: object
        "404":
          description: 정책 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 정책 상세 조회
      tags:
      - 관리자 - 정책
    put:
      consumes:
      - application/json
      description: 기존 정책을 수정합니다
      parameters:
      - description: 정책 ID
        in: path
        name: policy_id
        required: true
        type: string
      - description: 수정 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 수정 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Policy'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 정책 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 정책 수정
      tags:
      - 관리자 - 정책
  /api/admin/products:
    get:
      consumes:
      - application/json
      description: 모든 제품 목록을 조회합니다
      parameters:
      - description: 상태 필터 (active, inactive)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Product'
                  type: array
              type: object
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 제품 목록 조회
      tags:
      - 제품
    post:
      consumes:
      - application/json
      description: 새로운 제품을 생성합니다
      parameters:
      - description: 제품 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 생성 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 제품 생성
      tags:
      - 제품
  /api/admin/products/:
    delete:
      consumes:
      - application/json
      description: 제품을 삭제합니다. 연결된 라이선스가 있으면 삭제가 제한됩니다(RESTRICT).
      parameters:
      - description: 제품 ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 삭제 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "409":
          description: 연결된 라이선스로 인해 삭제 불가
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 제품 삭제
      tags:
      - 제품
    get:
      consumes:
      - application/json
      description: 특정 제품의 상세 정보를 조회합니다
      parameters:
      - description: 제품 ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 조회 성공
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 제품 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 제품 상세 조회
      tags:
      - 제품
    put:
      consumes:
      - application/json
      description: 제품 정보를 수정합니다
      parameters:
      - description: 제품 ID
        in: query
        name: id
        required: true
        type: string
      - description: 수정할 정보
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 수정 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - BearerAuth: []
      summary: 제품 수정
      tags:
      - 제품
  /api/client/logs:
    post:
      consumes:
      - application/json
      description: 클라이언트 애플리케이션에서 발생한 로그를 서버로 전송합니다 (배치 전송 지원)
      parameters:
      - description: 로그 데이터
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ClientLogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 로그 전송 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 라이선스 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 에러
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: 클라이언트 로그 전송
      tags:
      - 클라이언트 - 로그
  /api/license/activate:
    post:
      consumes:
      - application/json
      description: 디바이스를 라이선스에 등록하고 정책 및 다운로드 가능한 제품 파일 정보를 반환합니다.
      parameters:
      - description: 활성화 요청 본문
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ActivateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 이미 활성화된 디바이스
          schema:
            $ref: '#/definitions/models.APIResponse'
        "201":
          description: 활성화 완료
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 라이선스 비활성/만료 또는 디바이스 제한 초과
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 라이선스를 찾을 수 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 내부 오류
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: 라이선스 활성화
      tags:
      - 라이선스-클라이언트
  /api/license/files/{file_id}:
    get:
      description: 서명된 다운로드 URL을 사용하여 제품 파일을 전송합니다.
      parameters:
      - description: 파일 ID
        in: path
        name: file_id
        required: true
        type: string
      - description: 만료 타임스탬프(Unix)
        in: query
        name: exp
        required: true
        type: integer
      - description: 임의 난수
        in: query
        name: nonce
        required: true
        type: string
      - description: 서명 값
        in: query
        name: sig
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 파일 스트림
        "400":
          description: 요청 파라미터 오류
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 서명 검증 실패 또는 만료
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 파일 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 내부 오류
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: 제품 파일 다운로드 (클라이언트용)
      tags:
      - 라이선스-파일
  /api/license/validate:
    post:
      consumes:
      - application/json
      description: 라이선스에 등록된 디바이스인지 확인하고 정책 및 제품 파일 정보를 반환합니다.
      parameters:
      - description: 검증 요청 본문
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 검증 성공
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/models.APIResponse'
        "403":
          description: 라이선스 비활성, 미등록 디바이스 또는 만료
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: 라이선스를 찾을 수 없음
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: 서버 내부 오류
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: 라이선스 검증
      tags:
      - 라이선스-클라이언트
securityDefinitions:
  BearerAuth:
    description: 'JWT 토큰을 입력하세요. 형식: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
